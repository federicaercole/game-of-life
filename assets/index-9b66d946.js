(function(){const v=document.createElement("link").relList;if(v&&v.supports&&v.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))d(e);new MutationObserver(e=>{for(const c of e)if(c.type==="childList")for(const m of c.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&d(m)}).observe(document,{childList:!0,subtree:!0});function u(e){const c={};return e.integrity&&(c.integrity=e.integrity),e.referrerPolicy&&(c.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?c.credentials="include":e.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function d(e){if(e.ep)return;e.ep=!0;const c=u(e);fetch(e.href,c)}})();function E(t){const v=document.querySelector(".container"),u=`<svg aria-hidden="true" focusable="false" width="${t.columns*t.side}" height="${t.rows*t.side}" xmlns="http://www.w3.org/2000/svg">
        <defs>
            <pattern id="grid" width="${t.side}" height="${t.side}" patternUnits="userSpaceOnUse">
                <path d="M ${t.side} 0 L 0 0 0 ${t.side}" fill="none" stroke="#374151" stroke-width="0.5" />
            </pattern>
        </defs>

        <rect width="100%" height="100%" fill="url(#grid)" />
    </svg>`,d=`<canvas width="${t.columns*t.side}" height="${t.rows*t.side}" aria-label="Game grid" role="img"></canvas>`;v.innerHTML=u+d;const e=document.querySelector("canvas"),c=e.getContext("2d");window.addEventListener("resize",m);function m(){const a=document.querySelector("svg pattern");a.setAttribute("width",`${t.side/(e.width/e.clientWidth)}`),a.setAttribute("height",`${t.side/(e.width/e.clientWidth)}`)}function y(a){e.addEventListener("mousedown",()=>{e.addEventListener("mousemove",a),e.addEventListener("mousedown",a)})}function o(a){e.addEventListener("mouseup",()=>{e.removeEventListener("mousemove",a)})}const f=a=>{c.fillStyle=a.alive?"#65a30d":"#111827",c.fillRect(a.x*t.side,a.y*t.side,t.side,t.side)},w=a=>{for(let h=0;h<a.length;h++)f(a[h])},s=document.querySelector(".start"),g=document.querySelector(".random"),r=document.querySelector(".clear");function n(a){g.addEventListener("click",a)}function i(a){s.addEventListener("click",a)}function l(a){r.addEventListener("click",a)}return document.addEventListener("changeStartBtnText",()=>{const a=document.activeElement;t.playing&&a===s?s.textContent="Stop":!t.playing&&a===s?s.textContent="Continue":!t.playing&&a!==s&&(s.textContent="Start")}),{bindStartDrawingEvent:y,bindStopDrawingEvent:o,bindRandomBtnEvent:n,bindStartBtnEvent:i,bindClearBtnEvent:l,drawGameboard:w}}function S(t){const v=(r,n)=>({alive:!1,x:r,y:n}),u=(r,n)=>({...r,alive:n}),d=r=>{let n=[];for(let i=0;i<r.rows;i++)for(let l=0;l<r.columns;l++)n.push(v(l,i));return n};let e=d(t);const c=(r,n)=>r+n*t.columns;function m(r,n){const i=Math.floor(r/t.side),l=Math.floor(n/t.side),a=c(i,l),h=e[a];e[a]=u(h,!h.alive)}const y=()=>e.map(n=>u(n,Math.random()>.5));function o(r){for(let n=0;n<e.length;n++)e[n]=r[n]}const f=()=>{let r=[...e];for(let n=0;n<t.rows;n++)for(let i=0;i<t.columns;i++){const l=c(i,n),a=r[l],h=s(a),b=w(a,h);r[l]=b}o(r)};function w(r,n){let i=r;return n===3?i=u(r,!0):(n<2||n>3)&&(i=u(r,!1)),i}const s=r=>{const n=r.x,i=r.y;return g(n-1,i-1)+g(n,i-1)+g(n+1,i-1)+g(n-1,i)+g(n+1,i)+g(n-1,i+1)+g(n,i+1)+g(n+1,i+1)},g=(r,n)=>{const i=c(r,n);return r<0||r>=t.columns||n<0||n>=t.rows?0:e[i].alive?1:0};return{gameboard:e,changeCellState:m,createGameBoard:d,randomizeBoard:y,updateGameboard:o,game:f}}function B(){const t={rows:60,columns:100,side:10,playing:!1},v=100;function u(o){const f=document.querySelector("canvas"),w=o.offsetX*f.width/f.clientWidth,s=o.offsetY*f.height/f.clientHeight;return{x:w,y:s}}const d=S(t),e=E(t);e.bindStartDrawingEvent(m),e.bindStopDrawingEvent(m),e.bindStartBtnEvent(()=>(t.playing=!t.playing,document.dispatchEvent(new Event("changeStartBtnText")),y())),e.bindRandomBtnEvent(()=>{if(!t.playing){document.dispatchEvent(new Event("changeStartBtnText"));const o=d.randomizeBoard();c(o)}}),e.bindClearBtnEvent(()=>{if(!t.playing){document.dispatchEvent(new Event("changeStartBtnText"));const o=d.createGameBoard(t);c(o)}});function c(o){d.updateGameboard(o),e.drawGameboard(d.gameboard)}function m(o){const{x:f,y:w}=u(o);t.playing||(d.changeCellState(f,w),e.drawGameboard(d.gameboard))}function y(){d.game(),e.drawGameboard(d.gameboard);const o=setTimeout(()=>requestAnimationFrame(y),v);t.playing||clearTimeout(o)}}window.addEventListener("load",B);
